name: Build

on:
  push:
    branches:
      - main

jobs:
  buildApp: 
    name: Build App
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./app
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16.9.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.9.x

      - name: Install dependencies
        run: npm install    

      - name: Test
        run: npm test -- --coverage
        env:
          CI: true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Generate build
        run: npm run build

      - name: Share artifact inside workflow
        uses: actions/upload-artifact@v1
        with:
          name: react-build
          path: app/build
  
  buildInfra:
    name: Build Infra
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    permissions:
      id-token: write 
      contents: read 
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        role-duration-seconds: 900 
        aws-region: eu-west-2 

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan # Run plan to catch any errors not found in validation
      id: plan
      run: terraform plan -no-color -out plan.tfplan 


  infra:
    name: Deploy Infra
    runs-on: ubuntu-latest
    needs: buildInfra
    permissions:
      id-token: write 
      contents: read 
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1

    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        role-duration-seconds: 900 
        aws-region: eu-west-2 

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -out plan.tfplan 

    - name: Terraform Apply
      id: Apply
      run: terraform apply -no-color -auto-approve plan.tfplan


  deploySite:
    name: Deploy Site
    runs-on: ubuntu-latest
    needs: 
      - infra
      - buildApp
    defaults:
      run:
        working-directory: ./app
    permissions:
      id-token: write 
      contents: read 
    steps:
    - uses: actions/checkout@v2

    - uses: actions/download-artifact@v3
      with:
        name: react-build
        path: ./app/build
    - name: Deploy to S3

      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --delete
      env:
        AWS_S3_BUCKET: cv.rhodh.com
        AWS_REGION: eu-west-2
        SOURCE_DIR: "./app/build"
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}